diff --git a/script.js b/script.js
--- a/script.js
+++ b/script.js
@@ -0,0 +1,91 @@
+/* === AniMarket runtime patch ===
+   This block makes required UI changes without touching the original markup.
+   - Rename title to "АниМаркет"
+   - Remove "Профиль" button
+   - Remove the "Минимальный рейтинг" filter on search
+   - Separate and fix top-right role buttons, set destinations
+   - Show user pill (Имя Фамилия) if saved in localStorage
+*/
+(function () {
+  function qsa(sel, root=document){ return Array.from(root.querySelectorAll(sel)); }
+  function byText(tags, pattern){
+    const rex = (pattern instanceof RegExp) ? pattern : new RegExp(pattern, "i");
+    for(const tag of tags){
+      for(const el of qsa(tag)){
+        if (rex.test(el.textContent.trim())) return el;
+      }
+    }
+    return null;
+  }
+  function changeTitle(){
+    const el = byText(["h1","h2",".brand-title",".title"], /Поиск аниматоров/);
+    if(el){ el.textContent = "АниМаркет"; }
+  }
+  function removeProfile(){
+    const el = byText(["a","button"], /Профиль/);
+    if(el && el.parentElement){ el.remove(); }
+  }
+  function removeRatingFilter(){
+    const label = byText(["label"], /Минимальный рейтинг/);
+    if(label){
+      const wrap = label.closest(".field, .form-group, .input-group, .filter, div") || label;
+      wrap.style.display = "none";
+      return;
+    }
+    // fallback: select that has options "Любой" / "4+" / "4.5+" / "5.0"
+    for (const sel of qsa("select")){
+      const has = Array.from(sel.options || []).some(o => /Любой|4\+|4\.5\+|5\.0/i.test(o.text || ""));
+      if(has){
+        (sel.closest(".field, .form-group, .input-group, .filter, div") || sel).style.display = "none";
+        break;
+      }
+    }
+  }
+  function fixRoleButtons(){
+    const client = byText(["a","button"], /Для клиентов/);
+    const agency = byText(["a","button"], /Для агентств/);
+    if(client){
+      client.style.marginRight = "12px";
+      client.style.zIndex = "1";
+      if (client.tagName === "A") client.setAttribute("href", "auth.html?role=client");
+      client.addEventListener("click", (e)=>{
+        if(client.tagName !== "A"){ e.preventDefault(); location.href = "auth.html?role=client"; }
+      }, {once:true});
+    }
+    if(agency){
+      agency.style.marginLeft = "12px";
+      agency.style.zIndex = "1";
+      if (agency.tagName === "A") agency.setAttribute("href", "auth.html?role=agency");
+      agency.addEventListener("click", (e)=>{
+        if(agency.tagName !== "A"){ e.preventDefault(); location.href = "auth.html?role=agency"; }
+      }, {once:true});
+    }
+  }
+  function showUserPill(){
+    const user = JSON.parse(localStorage.getItem("am_user") || "null");
+    if(!user || !user.name) return;
+    // try to find left area in header; otherwise inject
+    let host = document.querySelector(".user-pill-host");
+    if(!host){
+      const header = document.querySelector("header") || document.body;
+      host = document.createElement("div");
+      host.className = "user-pill-host";
+      Object.assign(host.style, {position:"absolute", top:"12px", left:"12px", zIndex: 10});
+      header.appendChild(host);
+    }
+    const pill = document.createElement("div");
+    pill.className = "user-pill";
+    pill.textContent = user.name;
+    host.innerHTML = "";
+    host.appendChild(pill);
+  }
+  document.addEventListener("DOMContentLoaded", function () {
+    try{
+      changeTitle();
+      removeProfile();
+      removeRatingFilter();
+      fixRoleButtons();
+      showUserPill();
+    }catch(e){ console.warn("AniMarket patch error", e); }
+  });
+})();
diff --git a/style.css b/style.css
--- a/style.css
+++ b/style.css
@@ -0,0 +1,13 @@
+/* === AniMarket patch additions === */
+.user-pill{
+  padding:8px 12px;
+  border-radius:999px;
+  background:rgba(255,255,255,.15);
+  font-weight:600;
+}
+/* Разнести кнопки "Для клиентов/агентств" */
+a, button {
+  /* no-op; only to ensure this block parses in all builders */
+}
+/* Если есть класс/селектор, применим безопасный отступ */
+.role-btn + .role-btn { margin-left: 20px; }
diff --git a/auth.js b/auth.js
--- a/auth.js
+++ b/auth.js
@@ -0,0 +1,33 @@
+/* === AniMarket: enhance auth flow === */
+(function(){
+  function qs(s){ return document.querySelector(s); }
+  function ensureAuthUI(){
+    let root = document.getElementById("auth-root");
+    if(!root){
+      root = document.createElement("div");
+      root.id = "auth-root";
+      document.body.appendChild(root);
+    }
+    const params = new URLSearchParams(location.search);
+    const role = params.get("role") === "agency" ? "agency" : "client";
+    root.innerHTML = `
+      <div class="auth-page" style="max-width:560px;margin:40px auto;">
+        <h1>${role==="agency"?"Вход для агентств":"Вход для клиентов"}</h1>
+        <div class="card" style="display:flex;flex-direction:column;gap:12px;padding:20px;background:rgba(255,255,255,.05);border-radius:12px;">
+          <label>Почта</label>
+          <input id="am_email" type="email" placeholder="you@example.com" required style="padding:10px;border-radius:10px;">
+          <label>Пароль</label>
+          <input id="am_pass" type="password" placeholder="••••••••" required style="padding:10px;border-radius:10px;">
+          <button id="am_login" class="primary" style="padding:12px 16px;border-radius:12px;">Войти</button>
+        </div>
+        <div class="muted" style="margin-top:10px;opacity:.85;">
+          Нет аккаунта? <a id="am_reg_link" href="register.html?role=${role}">Зарегистрироваться</a>
+        </div>
+      </div>`;
+    qs("#am_login").addEventListener("click", ()=>{
+      alert("Демо-вход выполнен");
+      location.href = "index.html";
+    });
+  }
+  document.addEventListener("DOMContentLoaded", ensureAuthUI);
+})();
diff --git a/register.js b/register.js
--- a/register.js
+++ b/register.js
@@ -0,0 +1,90 @@
+/* === AniMarket: role-aware registration forms & validation === */
+(function(){
+  function qs(s){ return document.querySelector(s); }
+  function ensureRoot(id){
+    let root = document.getElementById(id);
+    if(!root){
+      root = document.createElement("div");
+      root.id = id;
+      document.body.appendChild(root);
+    }
+    return root;
+  }
+  function phoneValid(v){ return /^\+7\d{10}$/.test(v||""); }
+  function clientUI(root){
+    root.innerHTML = `
+      <div class="auth-page" style="max-width:560px;margin:40px auto;">
+        <h1>Регистрация клиента</h1>
+        <div class="card" style="display:flex;flex-direction:column;gap:12px;padding:20px;background:rgba(255,255,255,.05);border-radius:12px;">
+          <label>Имя</label><input id="f_name" style="padding:10px;border-radius:10px;">
+          <label>Фамилия</label><input id="l_name" style="padding:10px;border-radius:10px;">
+          <label>Адрес</label><input id="addr" style="padding:10px;border-radius:10px;">
+          <label>Квартира</label><input id="apt" style="padding:10px;border-radius:10px;">
+          <label>Номер телефона</label>
+          <div style="display:flex;align-items:center;gap:8px;">
+            <span style="opacity:.8;">+7</span>
+            <input id="phone" value="+7" style="padding:10px;border-radius:10px;flex:1;">
+          </div>
+          <button id="submit" class="primary" disabled style="opacity:.5;padding:12px 16px;border-radius:12px;">Зарегистрироваться</button>
+        </div>
+      </div>`;
+    const inputs = ["#f_name","#l_name","#addr","#apt","#phone"].map(qs);
+    function check(){
+      const ok = inputs.every(el=>el.value.trim()) && phoneValid(inputs[4].value);
+      const btn = qs("#submit");
+      btn.disabled = !ok;
+      btn.style.opacity = ok ? "1" : ".5";
+    }
+    inputs.forEach(el => el.addEventListener("input", check));
+    check();
+    qs("#submit").addEventListener("click", ()=>{
+      const name = `${qs("#f_name").value.trim()} ${qs("#l_name").value.trim()}`.trim();
+      localStorage.setItem("am_user", JSON.stringify({name}));
+      location.href = "index.html";
+    });
+  }
+  function agencyUI(root){
+    root.innerHTML = `
+      <div class="auth-page" style="max-width:560px;margin:40px auto;">
+        <h1>Регистрация агентства</h1>
+        <div class="card" style="display:flex;flex-direction:column;gap:12px;padding:20px;background:rgba(255,255,255,.05);border-radius:12px;">
+          <label>Почта</label><input id="email" type="email" style="padding:10px;border-radius:10px;">
+          <label>Номер телефона</label><input id="phone" value="+7" style="padding:10px;border-radius:10px;">
+          <button id="submit" class="primary" disabled style="opacity:.5;padding:12px 16px;border-radius:12px;">Отправить</button>
+        </div>
+        <div id="modal" style="display:none;position:fixed;inset:0;background:rgba(0,0,0,.5);align-items:center;justify-content:center;">
+          <div style="background:#111827;padding:24px;border-radius:16px;max-width:420px;">
+            <h3>Данные переданы</h3>
+            <p>Ждите обратной связи. Спасибо!</p>
+            <button id="ok" class="primary" style="margin-top:10px;padding:10px 14px;border-radius:10px;">Ок</button>
+          </div>
+        </div>
+      </div>`;
+    function valid(){
+      const email = qs("#email").value.trim();
+      const phone = qs("#phone").value.trim();
+      return /.+@.+\..+/.test(email) && phoneValid(phone);
+    }
+    function check(){
+      const ok = valid();
+      const btn = qs("#submit");
+      btn.disabled = !ok;
+      btn.style.opacity = ok ? "1" : ".5";
+    }
+    qs("#email").addEventListener("input", check);
+    qs("#phone").addEventListener("input", check);
+    check();
+    qs("#submit").addEventListener("click", ()=>{
+      qs("#modal").style.display = "flex";
+    });
+    qs("#ok").addEventListener("click", ()=>{
+      qs("#modal").style.display = "none";
+      location.href = "index.html";
+    });
+  }
+  document.addEventListener("DOMContentLoaded", ()=>{
+    const root = ensureRoot("register-root");
+    const role = new URLSearchParams(location.search).get("role")==="agency" ? "agency":"client";
+    (role==="agency" ? agencyUI : clientUI)(root);
+  });
+})();
